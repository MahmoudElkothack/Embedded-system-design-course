/*.$file${HSMs::../src::Clock_Alarm_SM.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*
* Model: Clock_Model.qm
* File:  ${HSMs::../src::Clock_Alarm_SM.h}
*
* This code has been generated by QM 5.1.4 <www.state-machine.com/qm/>.
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*/
/*.$endhead${HSMs::../src::Clock_Alarm_SM.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
#ifndef Clock_Alarm_H__
#define Clock_Alarm_H__
enum Clock_Alarm_sig{

ok_SIG = Q_USER_SIG,
Set_SIG,
ABRT_SIG,
Alarm_SIG,
TICK_SIG,
MAX_SIG




};
enum alarm_status{
ALARM_OFF,
ALARM_ON
};

enum time_mode{
    MODE_24H,
    MODE_12H
};

typedef enum time_format{
    FORMAT_24H,
    FORMAT_AM,
    FORMAT_PM
}time_format_t;

#define GET_HOUR(seconds)     (seconds/3600UL)
#define GET_MIN(seconds)      ((seconds/60UL)%60UL)
#define GET_SEC(seconds)      (seconds % 60UL)
#define DIGIT1(d)             (d/10U)
#define DIGIT2(d)             (d%10U)


#define MAX_TIME 864000 //24 H 60M 60S (100*10 =1S)
#define   initial_cur_time (((10*3600) + (10*60) + 10 ) *10)
#define   initial_alarm_time ((8*3600) *10)
#define TICKING_CUR_TIME_ROW 0
#define TICKING_CUR_TIME_COL 3
#define Clock_setting_time_row 0
#define Clock_setting_time_col 2
#define CLOCK_SETTING_TIME_HOUR_D1_COL 2
#define CLOCK_SETTING_TIME_HOUR_D2_COL 3
#define CLOCK_SETTING_TIME_MIN_D1_COL 5
#define CLOCK_SETTING_TIME_MIN_D2_COL 6
#define CLOCK_SETTING_TIME_SEC_D1_COL 8
#define CLOCK_SETTING_TIME_SEC_D2_COL 9



/*.$declare${HSMs::Clock_Alarm_Ctor} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*.${HSMs::Clock_Alarm_Ctor} ...............................................*/
void Clock_Alarm_Ctor(void);
/*.$enddecl${HSMs::Clock_Alarm_Ctor} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/

extern QHsm* Clock_Alarm_super;




#endif